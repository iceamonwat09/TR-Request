@model TrainingRequestApp.Models.TrainingRequest
@{
    ViewData["Title"] = "Training Request Details";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h2 class="mb-0">
                        <i class="fas fa-info-circle"></i> Training Request Details
                    </h2>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h5>Basic Information</h5>
                            <table class="table table-borderless">
                                <tr>
                                    <td><strong>ID:</strong></td>
                                    <td>@Model.Id</td>
                                </tr>
                                <tr>
                                    <td><strong>Training Title:</strong></td>
                                    <td>@Model.TrainingTitle</td>
                                </tr>
                                <tr>
                                    <td><strong>Training Date:</strong></td>
                                    <td>@Model.TrainingDate.ToString("dd/MM/yyyy")</td>
                                </tr>
                                <tr>
                                    <td><strong>Location:</strong></td>
                                    <td>@Model.Location</td>
                                </tr>
                                <tr>
                                    <td><strong>Status:</strong></td>
                                    <td>
                                        @switch (Model.Status)
                                        {
                                            case "Pending":
                                                <span class="badge bg-warning text-dark">Pending</span>
                                                break;
                                            case "Approved":
                                                <span class="badge bg-success">Approved</span>
                                                break;
                                            case "Rejected":
                                                <span class="badge bg-danger">Rejected</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">@Model.Status</span>
                                                break;
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td><strong>Created Date:</strong></td>
                                    <td>@Model.CreatedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5>Participants (@(Model.Participants?.Count ?? 0))</h5>
                            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#employeeModal">
                                <i class="fas fa-plus"></i> Add Participant
                            </button>
                        </div>
                        
                        @if (Model.Participants != null && Model.Participants.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead class="table-primary">
                                        <tr>
                                            <th>UserID</th>
                                            <th>Prefix</th>
                                            <th>Name</th>
                                            <th>Lastname</th>
                                            <th>Level</th>
                                            <th>Added Date</th>
                                            <th width="100">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var participant in Model.Participants)
                                        {
                                            <tr>
                                                <td>@participant.UserID</td>
                                                <td>@participant.Prefix</td>
                                                <td>@participant.Name</td>
                                                <td>@participant.Lastname</td>
                                                <td>@participant.Level</td>
                                                <td>@participant.AddedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                                <td>
                                                    <button type="button" class="btn btn-danger btn-sm" 
                                                            onclick="removeParticipant('@participant.UserID')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center text-muted p-4">
                                <i class="fas fa-users fa-3x mb-3"></i>
                                <p>No participants added yet.</p>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#employeeModal">
                                    <i class="fas fa-plus"></i> Add First Participant
                                </button>
                            </div>
                        }
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/TrainingRequest" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        <div>
                            <a href="@Url.Action("Edit", "TrainingRequest", new { id = Model.Id })" class="btn btn-warning">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Employee Search Modal -->
<div class="modal fade" id="employeeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-search"></i> Add Participant
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="userIdInput" class="form-label">Employee UserID</label>
                    <div class="input-group">
                        <input type="text" class="form-control" id="userIdInput" placeholder="Enter UserID">
                        <button type="button" class="btn btn-outline-primary" onclick="searchEmployee()">
                            <i class="fas fa-search"></i> Search
                        </button>
                    </div>
                </div>
                
                <div id="employeeInfo" style="display: none;">
                    <h6>Employee Information</h6>
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-4"><strong>UserID:</strong></div>
                                <div class="col-sm-8" id="displayUserID"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Prefix:</strong></div>
                                <div class="col-sm-8" id="displayPrefix"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Name:</strong></div>
                                <div class="col-sm-8" id="displayName"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Lastname:</strong></div>
                                <div class="col-sm-8" id="displayLastname"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4"><strong>Level:</strong></div>
                                <div class="col-sm-8" id="displayLevel"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmAddEmployee" onclick="addParticipant()" style="display: none;">
                    <i class="fas fa-check"></i> Add Participant
                </button>
            </div>
        </div>
    </div>
</div>

<script>
let currentEmployeeData = null;
const trainingRequestId = @Model.Id;

async function searchEmployee() {
    const userId = document.getElementById('userIdInput').value.trim();
    
    if (!userId) {
        alert('กรุณาใส่ UserID');
        return;
    }

    try {
        const response = await fetch('/api/employees/search', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId: userId })
        });

        if (response.ok) {
            const employee = await response.json();
            
            if (employee) {
                document.getElementById('displayUserID').textContent = employee.userID || '';
                document.getElementById('displayPrefix').textContent = employee.prefix || '';
                document.getElementById('displayName').textContent = employee.name || '';
                document.getElementById('displayLastname').textContent = employee.lastname || '';
                document.getElementById('displayLevel').textContent = employee.level || '';
                
                document.getElementById('employeeInfo').style.display = 'block';
                document.getElementById('confirmAddEmployee').style.display = 'inline-block';
                
                currentEmployeeData = employee;
            } else {
                alert('ไม่พบข้อมูลพนักงาน');
                hideEmployeeInfo();
            }
        } else {
            alert('เกิดข้อผิดพลาดในการค้นหาข้อมูล');
            hideEmployeeInfo();
        }
    } catch (error) {
        console.error('Error searching employee:', error);
        alert('เกิดข้อผิดพลาดในการค้นหาข้อมูล');
        hideEmployeeInfo();
    }
}

function hideEmployeeInfo() {
    document.getElementById('employeeInfo').style.display = 'none';
    document.getElementById('confirmAddEmployee').style.display = 'none';
    currentEmployeeData = null;
}

async function addParticipant() {
    if (!currentEmployeeData) return;

    try {
        const response = await fetch('/TrainingRequest/AddParticipant', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `trainingRequestId=${trainingRequestId}&userId=${currentEmployeeData.userID}`
        });

        const result = await response.json();
        
        if (result.success) {
            alert(result.message);
            location.reload(); // Refresh page to show new participant
        } else {
            alert(result.message);
        }
    } catch (error) {
        console.error('Error adding participant:', error);
        alert('เกิดข้อผิดพลาดในการเพิ่มผู้เข้าร่วม');
    }
    
    const modal = bootstrap.Modal.getInstance(document.getElementById('employeeModal'));
    modal.hide();
    resetEmployeeModal();
}

async function removeParticipant(userId) {
    if (!confirm('คุณต้องการลบผู้เข้าร่วมนี้หรือไม่?')) return;

    try {
        const response = await fetch('/TrainingRequest/RemoveParticipant', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `trainingRequestId=${trainingRequestId}&userId=${userId}`
        });

        const result = await response.json();
        
        if (result.success) {
            alert(result.message);
            location.reload(); // Refresh page to remove participant
        } else {
            alert(result.message);
        }
    } catch (error) {
        console.error('Error removing participant:', error);
        alert('เกิดข้อผิดพลาดในการลบผู้เข้าร่วม');
    }
}

function resetEmployeeModal() {
    document.getElementById('userIdInput').value = '';
    hideEmployeeInfo();
}

document.getElementById('employeeModal').addEventListener('hidden.bs.modal', function () {
    resetEmployeeModal();
});

document.getElementById('userIdInput').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        searchEmployee();
    }
});
</script>